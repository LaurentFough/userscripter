#!/bin/bash

readonly INDENTATION="    "
readonly DIR_ROOT="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
readonly DIR_SRC="src"
readonly DIR_USERSCRIPTER=".userscripter"
readonly DIR_BUILD="$DIR_USERSCRIPTER/build"
readonly DIR_EXAMPLE="$DIR_USERSCRIPTER/example"
readonly CMD_BUILD="./build"
readonly CONFIRMATION_ANSWER="Please answer 'y' or 'n'."
readonly ARGUMENT_EXAMPLE="--example"

cd "$DIR_ROOT"

function abort() {
    echo
    echo "Initialization canceled. No files were modified."
    exit 0
}

function echoFilesToOverwrite() {
    shopt -s globstar
    for f in $DIR_EXAMPLE/**; do
        filename=${f//\.userscripter\/example\//}
        if [ -f "src/$filename" ]; then
            echo "$INDENTATION$filename"
        fi
    done
}

# Help message:
if [ "$1" == "--help" ]; then
    echo "Usage: init [$ARGUMENT_EXAMPLE]"
    echo
    echo "Options:"
    echo "$INDENTATION""$ARGUMENT_EXAMPLE      Include example code"
    echo
    echo "This script initializes a new userscript by creating a boilerplate code base"
    echo "in $DIR_SRC/. Any existing files are overwritten."
    echo
    echo "If the $ARGUMENT_EXAMPLE flag is used, some example code is included."
    exit 0
fi

if [ "$1" == $ARGUMENT_EXAMPLE ]; then
    echo "Initializing userscript with example code ..."
else
    echo "Initializing clean userscript ..."
fi

if [ -e $DIR_SRC ] && [ ! -z "$(ls -A $DIR_SRC)" ]; then
    # Source directory exists and has some content.
    echo
    echo "WARNING! These files in $DIR_SRC/ will be overwritten:"
    echo
    echoFilesToOverwrite
    echo
    while true; do
        read -p "Are you sure you want to do this (y/N)? " choice
        case "$choice" in 
          y|Y ) break;;
          n|N ) abort;;
          "" ) abort;;
          * ) echo $CONFIRMATION_ANSWER;;
        esac
    done

    while true; do
        read -p "I will ask again, since this cannot be undone. Are you sure (y/N)? " choice
        case "$choice" in 
          y|Y ) break;;
          n|N ) abort;;
          "" ) abort;;
          * ) echo $CONFIRMATION_ANSWER;;
        esac
    done
fi

if [ ! -e $DIR_SRC ]; then
    mkdir $DIR_SRC
fi


argumentToInit=""
if [ "$1" == $ARGUMENT_EXAMPLE ]; then
    echo "Creating example code base in $DIR_SRC/ ..."
    argumentToInit=$ARGUMENT_EXAMPLE
else
    echo "Creating clean code base in $DIR_SRC/ ..."
fi


cp -r --force $DIR_EXAMPLE/* $DIR_SRC

for f in $DIR_EXAMPLE/**; do
    if [ ! -d $f ]; then
        file_dest="${f/$DIR_EXAMPLE/$DIR_SRC}"
        echo "Creating $file_dest ..."
        cat $f | node $DIR_BUILD/init.js $argumentToInit > $file_dest
    fi
done


if [ $? -eq 0 ]; then
    echo "Done!"
    echo
    echo "Run this to build the userscript:"
    echo
    echo "$INDENTATION$CMD_BUILD"
fi
